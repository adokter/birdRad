% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/integrate_profile.R
\name{integrate_profile}
\alias{integrate_profile}
\alias{integrate_profile.vp}
\alias{integrate_profile.list}
\alias{integrate_profile.vpts}
\title{Vertically integrate profiles (\code{vp} or \code{vpts}) into an integrated profile
(\code{vpi})}
\usage{
integrate_profile(x, alt_min, alt_max, alpha = NA, interval_max = Inf)

\method{integrate_profile}{vp}(
  x,
  alt_min = 0,
  alt_max = Inf,
  alpha = NA,
  interval_max = Inf
)

\method{integrate_profile}{list}(
  x,
  alt_min = 0,
  alt_max = Inf,
  alpha = NA,
  interval_max = Inf
)

\method{integrate_profile}{vpts}(
  x,
  alt_min = 0,
  alt_max = Inf,
  alpha = NA,
  interval_max = Inf
)
}
\arguments{
\item{x}{A \code{vp} or \code{vpts} object.}

\item{alt_min}{Numeric. Minimum altitude, in m.}

\item{alt_max}{Numeric. Maximum altitude, in m.}

\item{alpha}{Numeric. Migratory direction, in clockwise degrees from north.}

\item{interval_max}{Numeric. Maximum time interval belonging to a single
profile, in seconds. Traffic rates are set to zero at times \code{t} for which
no profiles can be found within the period \code{t - interval_max/2} to \code{t + interval_max/2}. Ignored for single profiles of class \code{vp}.}
}
\value{
A \code{vpi} object: a data frame with vertically integrated profile
quantities.
}
\description{
Performs a vertical integration of density, reflectivity and migration
traffic rate, and a vertical averaging of ground speed and direction weighted
by density.
}
\details{
\subsection{Available quantities}{

See \code{\link[=summary.vpi]{summary.vpi()}}.

Vertically integrated density and reflectivity are related according to
\eqn{vid=vir/rcs(x)}, with \code{rcs} the assumed radar cross section per
individual. Similarly, migration traffic rate and reflectivity traffic rate
are related according to \eqn{mtr=rtr/rcs(x)}
}

\subsection{Ground speed (\code{ff}) and ground speed components (\code{u}, \code{v})}{

The height-averaged ground speed is defined as:

\deqn{ff = \sum_i dens_i ff_i / \sum_i dens_i}{ff = \sum_i dens_i ff_i /
\sum_i dens_i}

with the sum running over all altitude layers between \code{alt_min} and
\code{alt_max}, \eqn{dens_i} the bird density, \eqn{ff_i} the ground speed at
altitude layer \code{i}.

The height-averaged \code{u} component (west to east) is defined as:

\deqn{u = \sum_i dens_i u_i / \sum_i dens_i}{u = \sum_i dens_i u_i / \sum_i
dens_i}

The height-averaged \code{v} component (south to north) is defined as:

\deqn{v = \sum_i dens_i v_i / \sum_i dens_i}{v = \sum_i dens_i v_i / \sum_i
dens_i}

Note that \eqn{ff_i=\sqrt(u_i^2 + v_i^2)}, but the same does not hold for the
height-integrated speeds, i.e. \eqn{ff != \sqrt(u^2 + v^2)} as soon as the
ground speed directions vary with altitude.
}

\subsection{Migration traffic rate (\code{mtr}) and reflectivity traffic rate (\code{rtr})}{

Migration traffic rate (\code{mtr}) for an altitude layer is a flux measure,
defined as the number of targets crossing a unit of transect per hour. Column
\code{mtr} of the output dataframe gives migration traffic rates in
individuals/km/hour.

The transect direction is set by the angle \code{alpha}. When \code{alpha = NA}, the
transect runs perpendicular to the measured migratory direction. \code{mtr} then
equals the number of crossing targets per km transect per hour, for a
transect kept perpendicular to the measured migratory movement at all times
and altitudes. In this case \code{mtr} is always a positive quantity, defined as:

\deqn{mtr = 3.6 \sum_i dens_i ff_i \Delta h}{mtr = 3.6 \sum_i dens_i ff_i
\Delta h}

with the sum running over all altitude layers between \code{alt_min} and
\code{alt_max}, \eqn{dens_i} the bird density, \eqn{ff_i} the ground speed at
altitude layer \code{i}, and \eqn{\Delta h} the altitude layer width. The factor
3.6 refers to a unit conversion of speeds \eqn{ff_i} from m/s to km/h.

If \code{alpha} is given a numeric value, the transect is taken perpendicular to
the direction \code{alpha}, and the number of crossing targets per hour per km
transect is calculated as:

\deqn{mtr = 3.6 \sum_i dens_i ff_i \cos((dd_i-alpha) pi/180) \Delta h}{mtr =
3.6 \sum_i dens_i ff_i \cos((dd_i-alpha) pi/180) \Delta h}

with \eqn{dd_i} the migratory direction at altitude \code{i}.

Note that this equation evaluates to the previous equation when \code{alpha}
equals \eqn{dd_i}.

Also note we can rewrite this equation using trigonometry as:

\deqn{mtr = 3.6 \sum_i dens_i (u_i \sin(alpha pi/180) + v_i \cos(alpha
pi/180)) \Delta h}{mtr = 3.6 \sum_i dens_i (u_i \sin(alpha pi/180) + v_i
\cos(alpha pi/180)) \Delta h}

with \eqn{u_i} and \eqn{v_i} the \code{u} and \code{v} ground speed components at
altitude \code{i}.

In this definition \code{mtr} is a traditional flux into a direction of interest.
Targets moving into the direction \code{alpha} contribute positively to \code{mtr},
while targets moving in the opposite direction contribute negatively to
\code{mtr}. Therefore \code{mtr} can be both positive or negative, depending on the
definition of alpha.

Note that \code{mtr} for a given value of \code{alpha} can also be calculated from the
vertically integrated density \code{vid} and the height-integrated velocity
components \code{u} and \code{v} as follows:

\deqn{mtr = 3.6 (u \sin(alpha pi/180) + v \cos(alpha pi/180)) vid}{mtr = 3.6
(u \sin(alpha pi/180) + v \cos(alpha pi/180)) vid}

Formula for reflectivity traffic rate \code{rtr} are found by replacing \code{dens}
with \code{eta} and \code{vid} with \code{vir} in the formula for \code{mtr}. Reflectivity
traffic rate gives the cross-sectional area passing the radar per km transect
perpendicular to the migratory direction per hour. \code{mtr} values are
conditional on settings of \code{\link[=rcs]{rcs()}}, while \code{rtr} values are not.
}

\subsection{Migration traffic (\code{mt}) and reflectivity traffic (\code{rt})}{

Migration traffic (\code{mt}) is calculated by time-integration of migration
traffic rates. Migration traffic gives the number of individuals that have
passed per km perpendicular to the migratory direction at the position of the
radar for the full period of the time series within the specified altitude
band.

Reflectivity traffic (\code{rt}) is calculated by time-integration of reflectivity
traffic rates. Reflectivity traffic gives the total cross-sectional area that
has passed per km perpendicular to the migratory direction at the position of
the radar for the full period of the time series within the specified
altitude band.

\code{mt} values are conditional on settings of \code{\link[=rcs]{rcs()}}, while \code{rt} values are
not.

Columns \code{mt} and \code{rt} in the output dataframe provides migration traffic as a
numeric value equal to migration traffic and reflectivity traffic from the
start of the time series up till the moment of the time stamp of the
respective row.
}
}
\section{Methods (by class)}{
\itemize{
\item \code{vp}: Vertically integrate a vertical profile (\code{vp}).

\item \code{list}: Vertically integrate a list of vertical
profiles (\code{vp}).

\item \code{vpts}: Vertically integrate a time series of
vertical profiles (\code{vpts}).
}}

\examples{
# Calculate migration traffic rates for a single vp
integrate_profile(example_vp)

# Calculate migration traffic rates for a list of vps
integrate_profile(c(example_vp, example_vp))

# Calculate migration traffic rates for a vpts
vpi <- integrate_profile(example_vpts)

# Plot migration traffic rate (mtr) for the full air column
plot(integrate_profile(example_vpts))

# Plot migration traffic rate (mtr) for altitudes > 1 km above sea level
plot(integrate_profile(example_vpts, alt_min = 1000))

# Plot cumulative migration traffic rates (mt)
plot(integrate_profile(example_vpts), quantity = "mt")
}
\seealso{
\itemize{
\item \code{\link[=summary.vpi]{summary.vpi()}}
}
}
