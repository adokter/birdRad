% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/operators.R
\name{Math.scan}
\alias{Math.scan}
\alias{Math.pvol}
\alias{Ops.param}
\alias{Ops.scan}
\alias{Ops.pvol}
\title{Mathematical and arithmetic operations on param's, scan's and pvol's}
\usage{
\method{Math}{scan}(x, ...)

\method{Math}{pvol}(x, ...)

\method{Ops}{param}(e1, e2)

\method{Ops}{scan}(e1, e2)

\method{Ops}{pvol}(e1, e2)
}
\arguments{
\item{x}{object of class \code{scan}, or \code{pvol}}

\item{...}{parameters passed on to the Math functions}

\item{e1}{object of class \code{param}, \code{scan}, \code{pvol} or a number}

\item{e2}{object of class \code{param}, \code{scan}, \code{pvol} or a number}
}
\value{
an object of the input class
}
\description{
Mathematical and arithmetic operations on param's, scan's and pvol's
}
\details{
These function do not attempt to check if the operations are sensible.
For example when combining logarithmic values (e.g. DBZ) it might make
sense to first take the exponent them before summing them.

When doing operations on object of length one the arguments are recycled.

Attributes are taken from the first object in the operation.

If a \code{pvol} is multiplied by a list arguments are taken from the list per scan.
this requires the list to have the same length as the number of scans.
}
